name: Make release
description: Make release

inputs:
  tag_name:
    description: Set product to compile
    required: true
    type: string
  target_name:
    description: Set chipcode module to compile
    required: true
    type: string
  branch:
    required: true
    type: string
  hardware_version:
    required: true
    type: string

runs:
  using: composite
  steps:
    - run: |
        echo "tag_name=${{ inputs.tag_name }}"
        echo "target_name=${{ inputs.target_name }}"
        echo "sudo chown $(whoami) -R $(pwd)"
        sudo chown $(whoami) -R $(pwd)
      shell: bash
    - uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch }}
        fetch-depth: 1
        lfs: true
    - run: |
        git fetch origin feature/github_workflow
        git reset --hard
        git clean -fdx
        git checkout origin/feature/github_workflow -- .github build
        git format-patch -1 1a7f2024bb1
        if patch -p1 < $patch_file --dry-run; then
            echo "Patch applied successfully"
            patch -p1 < $patch_file
        else
            echo "Failed to apply patch"
            exit -1
        fi
        bash build/build.sh ${{ inputs.tag_name }} ${{ inputs.hardware_version }} ${{ inputs.target_name }} all release
        zip -r mdm9607_release_${{ inputs.target_name }}_${{ inputs.hardware_version }}_${{ inputs.tag_name }}.zip binaries_out
        echo "${{ github.token }}" > .token.txt
        gh auth login --with-token < .token.txt
        gh release upload "Release_MDM9607_${{ inputs.tag_name }}" mdm9607_release_*.zip --clobber
        gh auth logout -u github-actions[bot]
        rm .token.txt
      shell: bash
      env:
        GH_TOKEN: ${{ env.GH_TOKEN }}
